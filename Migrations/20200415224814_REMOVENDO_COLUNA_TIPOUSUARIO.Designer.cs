// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200415224814_REMOVENDO_COLUNA_TIPOUSUARIO")]
    partial class REMOVENDO_COLUNA_TIPOUSUARIO
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackEnd.Models.Atividade", b =>
                {
                    b.Property<int>("IdAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAtividade")
                        .HasColumnType("int(11)");

                    b.Property<string>("Atividade1")
                        .IsRequired()
                        .HasColumnName("atividade")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnName("valor")
                        .HasColumnType("enum('Muito bom','Bom','Regular','Ruim','Muito ruim')")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("IdAtividade")
                        .HasName("PRIMARY");

                    b.ToTable("atividade");
                });

            modelBuilder.Entity("BackEnd.Models.Disciplina", b =>
                {
                    b.Property<int>("IdDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDisciplina")
                        .HasColumnType("int(11)");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnName("materia")
                        .HasColumnType("varchar(35)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnName("turno")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("IdDisciplina")
                        .HasName("PRIMARY");

                    b.ToTable("disciplina");
                });

            modelBuilder.Entity("BackEnd.Models.DisciplinaAtividade", b =>
                {
                    b.Property<int>("IdDisciplinaAtividade")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDisciplina_atividade")
                        .HasColumnType("int(11)");

                    b.Property<int>("AtividadeIdAtividade")
                        .HasColumnName("atividade_idAtividade")
                        .HasColumnType("int(11)");

                    b.Property<int>("DisciplinaIdDisciplina")
                        .HasColumnName("disciplina_idDisciplina")
                        .HasColumnType("int(11)");

                    b.HasKey("IdDisciplinaAtividade")
                        .HasName("PRIMARY");

                    b.HasIndex("AtividadeIdAtividade")
                        .HasName("fk_Disciplina_has_Atividade_Atividade1_idx");

                    b.HasIndex("DisciplinaIdDisciplina")
                        .HasName("fk_Disciplina_has_Atividade_Disciplina1_idx");

                    b.ToTable("disciplina_atividade");
                });

            modelBuilder.Entity("BackEnd.Models.Escola", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasColumnName("cnpj")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(35)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("telefone")
                        .HasColumnType("varchar(25)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Cnpj")
                        .HasName("PRIMARY");

                    b.HasIndex("Telefone")
                        .IsUnique()
                        .HasName("telefone_UNIQUE");

                    b.ToTable("escola");
                });

            modelBuilder.Entity("BackEnd.Models.Pontuacao", b =>
                {
                    b.Property<int>("IdPontuacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPontuacao")
                        .HasColumnType("int(11)");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao")
                        .HasColumnType("text")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Pontuacao1")
                        .IsRequired()
                        .HasColumnName("pontuacao")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("PontuacaoUsuarioDisciplina")
                        .HasColumnName("pontuacao_usuario_disciplina")
                        .HasColumnType("int(11)");

                    b.HasKey("IdPontuacao")
                        .HasName("PRIMARY");

                    b.HasIndex("PontuacaoUsuarioDisciplina")
                        .HasName("fk_Pontuacao_Usuario_Disciplina1_idx");

                    b.ToTable("pontuacao");
                });

            modelBuilder.Entity("BackEnd.Models.Usuario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnName("cpf")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("dataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(90)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("EscolaCnpj")
                        .IsRequired()
                        .HasColumnName("escola_cnpj")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("NomeSobrenome")
                        .IsRequired()
                        .HasColumnName("nomeSobrenome")
                        .HasColumnType("varchar(35)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("senha")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Telefone")
                        .HasColumnName("telefone")
                        .HasColumnType("varchar(25)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnName("tipoUsuario")
                        .HasColumnType("enum('Aluno','Professor','Responsavel','Adm')")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Cpf")
                        .HasName("PRIMARY");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("email_UNIQUE");

                    b.HasIndex("EscolaCnpj")
                        .HasName("fk_Usuario_Escola_idx");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("BackEnd.Models.UsuarioDisciplina", b =>
                {
                    b.Property<int>("IdUsuarioDisciplina")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUsuario_Disciplina")
                        .HasColumnType("int(11)");

                    b.Property<int>("DisciplinaIdDisciplina")
                        .HasColumnName("disciplina_idDisciplina")
                        .HasColumnType("int(11)");

                    b.Property<string>("UsuarioCpf")
                        .IsRequired()
                        .HasColumnName("usuario_cpf")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("IdUsuarioDisciplina")
                        .HasName("PRIMARY");

                    b.HasIndex("DisciplinaIdDisciplina")
                        .HasName("fk_Usuario_has_Disciplina_Disciplina1_idx");

                    b.HasIndex("UsuarioCpf")
                        .HasName("fk_Usuario_has_Disciplina_Usuario1_idx");

                    b.ToTable("usuario_disciplina");
                });

            modelBuilder.Entity("BackEnd.Models.DisciplinaAtividade", b =>
                {
                    b.HasOne("BackEnd.Models.Atividade", "AtividadeIdAtividadeNavigation")
                        .WithMany("DisciplinaAtividade")
                        .HasForeignKey("AtividadeIdAtividade")
                        .HasConstraintName("fk_Disciplina_has_Atividade_Atividade1")
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Disciplina", "DisciplinaIdDisciplinaNavigation")
                        .WithMany("DisciplinaAtividade")
                        .HasForeignKey("DisciplinaIdDisciplina")
                        .HasConstraintName("fk_Disciplina_has_Atividade_Disciplina1")
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd.Models.Pontuacao", b =>
                {
                    b.HasOne("BackEnd.Models.UsuarioDisciplina", "PontuacaoUsuarioDisciplinaNavigation")
                        .WithMany("Pontuacao")
                        .HasForeignKey("PontuacaoUsuarioDisciplina")
                        .HasConstraintName("fk_Pontuacao_Usuario_Disciplina1")
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd.Models.Usuario", b =>
                {
                    b.HasOne("BackEnd.Models.Escola", "EscolaCnpjNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("EscolaCnpj")
                        .HasConstraintName("fk_Usuario_Escola")
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd.Models.UsuarioDisciplina", b =>
                {
                    b.HasOne("BackEnd.Models.Disciplina", "DisciplinaIdDisciplinaNavigation")
                        .WithMany("UsuarioDisciplina")
                        .HasForeignKey("DisciplinaIdDisciplina")
                        .HasConstraintName("fk_Usuario_has_Disciplina_Disciplina1")
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Usuario", "UsuarioCpfNavigation")
                        .WithMany("UsuarioDisciplina")
                        .HasForeignKey("UsuarioCpf")
                        .HasConstraintName("fk_Usuario_has_Disciplina_Usuario1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
